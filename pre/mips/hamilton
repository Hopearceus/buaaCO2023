.data
G:.space 256
book:.space 32

.text
li $t1, 1 # t1 = 1
li $v0, 5
syscall
move $s0, $v0 #s0 = n
li $v0, 5
syscall
move $s1, $v0 #s1 = m
li $t0, 0

for_1:
li $v0, 5 # read the edge
syscall
move $a0, $v0
subi $a0, $a0, 1
li $v0, 5
syscall
move $a1, $v0
subi $a1, $a1, 1

jal get_num  #store the edge
nop
mul $v1, $v1, 4
sw $t1, G($v1) 
move $t2, $a0 # switch a0, a1
move $a0, $a1
move $a1, $t2
jal get_num
nop
mul $v1, $v1, 4
sw $t1, G($v1)

addi $t0, $t0, 1 # control the loop
blt $t0, $s1, for_1
nop

li $t0, 0
for_2: # edge between x and x
move $a0, $t0
move $a1, $t0
jal get_num
nop
mul $v1, $v1, 4
sw $t1, G($v1)
addi $t0, $t0, 1
blt $t0, $s0, for_2
nop

# dfs begin
li $a0, 0
jal dfs
nop
li $v0, 1
move $a0, $s6 #s6 carries ans
syscall
li $v0, 10
syscall

# -------------------------------------------------

get_num: # a0, a1 carry the row and column number. returning location in v1
mul $t9, $s0, $a0
add $v1, $t9, $a1
jr $ra
nop

dfs:
beq $t1, $s6, exit # if already find the ans
nop

subi $sp, $sp, 12
sw $a0, ($sp) # a0 is now you are
sw $ra, 4($sp)
mul $t2, $a0, 4
sw $t1, book($t2)
li $t0, 0 # t0 is i
li $t2, 1 # t2 is flag

loop_1:
mul $t3, $t0, 4
lw $t3, book($t3)
and $t2, $t2, $t3
addi $t0, $t0, 1
blt $t0, $s0, loop_1
nop

move $a1, $0
jal get_num
nop
lw $ra, 4($sp)
mul $v1, $v1, 4
lw $v1, G($v1)
and $t2, $t2, $v1
seq $s6, $t2, $t1
beq $t2, $t1, exit # jump if find the ans
nop

li $t0, 0 # loop to find new point
loop_2:
mul $t3, $t0, 4
lw $t2, book($t3) # t2 tells whether this has been visited
move $a1, $t0
jal get_num
nop
lw $ra, 4($sp)
mul $v1, $v1, 4
lw $v1, G($v1) # t1 tells whether there is edge between now and this
seq $v1, $v1, $t1
seq $t2, $0, $t2
and $t2, $v1, $t2
beq $t2, $t1, if_
next:
addi $t0, $t0, 1
blt $t0, $s0, loop_2
nop

lw $a0, ($sp)
lw $ra, 4($sp)
addi, $sp, $sp, 12
mul $t2, $a0, 4
sw $0, book($t2)
jr $ra
nop

if_:
sw $t0, 8($sp)
move $a0, $t0
jal dfs
lw $t0, 8($sp)
lw $a0, ($sp)
lw $ra, 4($sp)
j next
nop

exit:
lw $a0, ($sp)
lw $ra, 4($sp)
lw $t0, 8($sp)
addi, $sp, $sp, 12
jr $ra
nop
